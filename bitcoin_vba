
Option Explicit

Private Declare Function URLDownloadToFile Lib "urlmon" _
Alias "URLDownloadToFileA" (ByVal pCaller As Long, _
ByVal szURL As String, ByVal szFileName As String, _
ByVal dwReserved As Long, ByVal lpfnCB As Long) As Long
Dim Ret As Long
Const strFileName = "C:\Temp\bitcoin"
Const dataTable = "data"

Sub MovingAverage()
' Simply to define the Workflow for the whole process

    Download
    OpenData
    SetRange
    SortDate
    SampleData
    MovAverage
    Graphic


End Sub



Sub Download()
' QuandlData()
' strFileName is already set as a constant

Dim URL As String

    URL = "https://www.quandl.com/api/v3/datasets/BITCOIN/BTCEUSD.csv?api_key=P6QLMV4K3VrkT3jsdCP1"
    
    Ret = URLDownloadToFile(0, URL, strFileName, 0, 0)
    
        If Ret = 0 Then
            MsgBox "File successfully downloaded"
            Else: MsgBox "Unable to download the file"
        End If
        
End Sub

Sub OpenData()


' remember that strFileName is set as a constant


Workbooks.OpenText Filename:=strFileName, DataType:=xlDelimited, Comma:=True _
 , DecimalSeparator:=".", ThousandsSeparator:=","  ', Local:=False
ActiveWorkbook.SaveAs Filename:=strFileName, FileFormat:= _
        xlOpenXMLWorkbookMacroEnabled, CreateBackup:=False



End Sub
   

Sub SetRange()
 ' dataTable is already announced as a constant

     
Range("A1").Select
Range(Selection, Selection.End(xlToRight)).Select
Range(Selection, Selection.End(xlDown)).Select

ActiveSheet.ListObjects.Add(xlSrcRange, , , xlYes).Name = _
        dataTable
        
    Range(dataTable & "[#All]").Select
    
    ActiveSheet.ListObjects(dataTable).TableStyle = "TableStyleMedium6"
 
End Sub

Sub SortDate()
Dim sortField As String

sortField = "Date"

    Range(dataTable).Sort _
        Key1:=Range(dataTable & "[" & sortField & "]"), Header:=xlYes


End Sub

Sub SampleData()
Dim dataTableObj As ListObject

Set dataTableObj = ActiveSheet.ListObjects(dataTable)

' here we need to define the number of observations to the latest 365
' so we count total number of lines and subtract by 365

'If the data is in column A
Dim lngCount As Long

    lngCount = Application.WorksheetFunction.CountA(Columns(1))
    lngCount = lngCount - 365


    dataTableObj.Range.Rows("2:" & lngCount).Delete



End Sub

Sub MovAverage()
Dim windowSize As Integer
Dim lngCount As Long

    lngCount = Application.WorksheetFunction.CountA(Columns(1))
    windowSize = 21


'Adds the necessary columns for calculating Moving Average and Relative Strength Index

    With ActiveSheet.ListObjects(dataTable)
           .ListColumns.Add.Name = "Mov_Average"
           .ListColumns.Add.Name = "Ticks"
           .ListColumns.Add.Name = "avg_tickup"
           .ListColumns.Add.Name = "avg_tickdown"
           .ListColumns.Add.Name = "RSI"

'Moves into the defined number
'Eventually we could add here a box for the user to select desired number of obs


            .DataBodyRange(windowSize, 9).FormulaR1C1 = "=AVERAGE(R[-20]C[-4]:RC[-4])"
            .DataBodyRange(windowSize, 9).AutoFill Destination:=Range("I" & windowSize + 1 & ":I" & lngCount)
            
            .DataBodyRange(windowSize - 19, 10).FormulaR1C1 = "=[@Close]-R[-1]C[-5]"
            '.DataBodyRange(windowSize - 19, 10).AutoFill Destination:=Range("J" & windowSize + 1 & ":J" & lngCount)
            
            .DataBodyRange(windowSize, 11).FormulaR1C1 = "=+AVERAGEIF(R[-20]C[-1]:RC[-1],"">0"")"
            .DataBodyRange(windowSize, 11).AutoFill Destination:=Range("K" & windowSize + 1 & ":K" & lngCount)
            
            .DataBodyRange(windowSize, 12).FormulaR1C1 = "=-AVERAGEIF(R[-20]C[-2]:RC[-2],""<0"")"
            .DataBodyRange(windowSize, 12).AutoFill Destination:=Range("L" & windowSize + 1 & ":L" & lngCount)
                        
            .DataBodyRange(windowSize, 13).FormulaR1C1 = "=+[@[avg_tickup]]/SUM(data[@[avg_tickup]:[avg_tickdown]])"
            

    End With

End Sub


Sub Graphic()
Dim graphDate As Range
Dim graphClose As Range
Dim graphMovAverage As Range
Dim graphRSI As Range
Dim graphRange As Range
Dim bitChart As Object


'define the data to pass into the graph
    Set graphDate = Range(dataTable & "[[Date]]")
    Set graphClose = Range(dataTable & "[[Close]]")
    Set graphMovAverage = Range(dataTable & "[[Mov_Average]]")
    Set graphRSI = Range(dataTable & "[[RSI]]")

    Set graphRange = Union(graphDate, graphClose, graphMovAverage, graphRSI)

    
' create the graph with an specific object name
    Set bitChart = ActiveSheet.ChartObjects.Add( _
    Left:=ActiveCell.Left, _
    Width:=450, _
    Top:=ActiveCell.Top, _
    Height:=250)


    With bitChart.Chart

' pass on the data into the graph
        .SetSourceData Source:=graphRange

' define the graph types and formats
        '.ChartType = xlLineMarkers
        
        .SeriesCollection(1).ChartType = xlLineMarkers
        .SeriesCollection(1).Format.Line.Visible = msoFalse
        .SeriesCollection(3).MarkerStyle = 1
        .SeriesCollection(1).MarkerSize = 2
        
        .SeriesCollection(2).ChartType = xlLine
        .SeriesCollection(2).Format.Line.Weight = 1.25
        
        .SeriesCollection(3).ChartType = xlLineMarkers
        .SeriesCollection(3).MarkerStyle = 8
        .SeriesCollection(3).MarkerSize = 2
        .SeriesCollection(3).Format.Line.Weight = 1
        

' send RSI collection to axis 2 and format axis
        .SeriesCollection(3).AxisGroup = 2
        .Axes(xlValue, xlSecondary).MaximumScale = 2
        
        'Vertical Axes
        .SetElement (msoElementPrimaryValueAxisTitleRotated)
        .Axes(xlValue, xlPrimary).AxisTitle.Text = "Close Price and Moving Average"
        .Axes(xlValue).TickLabels.NumberFormat = "#.##0"
        .Axes(xlValue).TickLabels.Font.Size = 8
        
        
        .SetElement (msoElementSecondaryValueAxisTitleRotated)
        .Axes(xlValue, xlSecondary).AxisTitle.Text = "RSI"
        .Axes(xlValue, xlSecondary).TickLabels.NumberFormat = "0%"
        .Axes(xlValue, xlSecondary).TickLabels.Font.Size = 8
        
        'Horizontal Axis
        .Axes(xlCategory).TickLabels.Orientation = xlUpward
        .Axes(xlCategory).TickLabels.Font.Size = 8
        
        'Horizontal Lines
        .Axes(xlValue).MajorGridlines.Format.Line.Transparency = 0.9
        .Axes(xlValue).MajorGridlines.Format.Line.DashStyle = msoLineSysDash
        
        
' give names for all series and place it at the bottom
        .SeriesCollection(1).Name = Range(dataTable & "[[#Headers],[Close]]")
        .SeriesCollection(2).Name = Range(dataTable & "[[#Headers],[Mov_Average]]")
        .SeriesCollection(3).Name = Range(dataTable & "[[#Headers],[RSI]]")
        
        .Legend.Position = xlBottom
        

' set the Chart title and place the graph object in a new sheet with its proper name
         
            .SetElement (msoElementChartTitleAboveChart)
            .ChartTitle.Text = "Bitcoin Price Analysis"
            
            .Location Where:=xlLocationAsNewSheet, Name:="Bitcoin_Analysis"
            
            
            
        
    End With

    
    ActiveWorkbook.Save

End Sub
